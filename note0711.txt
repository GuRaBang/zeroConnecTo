7/11

***node / Sass 환경 설정
***nvm설치


크로스브라우징, 크로스플랫폼
구조설계!!!!=>html이 중요!!!
마크업...
UI바라보는 시각


교육과정
(***중요!!!)고정형->반응형->SASS->Tailwindcss
고정형이 가장 어렵고 중요함!!!


폴더정리 
zerohtml-html5
	-rwd
	-sass
	-tailwind


***firefox설치(5대 major 브라우저-다확인해야하지만 webkit기반이기 때문에 chrome으로 거의다 확인 가능. 그러나 firefox는 웹킷기반이 아니라 확인해야함)
=> chrome, explore11, firefox에서 확인해보기!!!
? 5대 브라우저&벤더사 다시 공부
? 익스텐션의 역할
? html5 는 html, xhtml을 모두 포함한다. 
? html, xhtml(xml기반의 언어다. ex) 반드시 닫는요소가 있다.) 문법이 다르다. 
기본 표기법은 xhtml로 할거임 => 리액트에서 도움됨
? html, xhtml, xml notation 차이(notation 차이가 왜 있는걸까)
settings.jason으로 커스텀하는 거임
?abbreviation
?CLI는 또 뭘까. CLI와 익숙해져라. CLI vs GUI vs NUI
?용어 신경쓰기 ( ^캐롯, ~틸드, `백틱)
extension도 커스텀
?nvm : node version manager
?git은 version 관리 
?github은 git 서비스임


***git 설치(완료) => git push 할 때 정리!!!
window-Git, Bash default로 설치
git, node version 최신으로 (readme 읽고)
zeroHTML 디렉토리에서 
1)git init
2)git default branch master main구글링 후 브랜치명을 master에서 main으로 변경
3)git branch -m master main (기본 브랜치 이름이 master* => main* 인지 확인)
4)git remote -v
5)git remote add origin https://github.com/GuRaBang/zeroConnecTo.git
6)git remote -v (origin 확인)
7)초기설정 시작하기 
8)git config --global user.name "John Doe" (github 이름)
9)git config --global user.email johndoe@example.com (깃허브 이메일)
10) git config --global core.editor "code --wait"
11)VS commend 검색 shellcommend선택 
12) git bash에서 code . (VS code 나옴)
=> CLI에서 vs 열어라
13) vs 터비널에서 git bash defaul로 설정하고 껐다키기
 
버전관리(vs 터미널 git bash에서) 버전관리는 파일단위로
1)git add .
2)git commit -m "HTML 고정형 레이아웃 예제 백업"
3)git status 
4)git remote -v
5)git push origin main(아이디, 비밀번호 보내기)

문제: git bash 열때 바탕화면에서 여는 경우 경로가 이상한 문제 => 직접 경로 이동해야하는 줄
내가 열 파일 오른쪽 클릭 git bash here 누르면 그 경로로 git bash 열수 있음

--------------------------------------------------------------------------------------------

*돈 받고 일하는 책임감 => 이거를 자소서, 면접에 

인터넷 서비스: telnet IRC e-mail Archie Usenet Gopher FTP WWW
e-mail 지금은 web mail로 볼수있음
독립적인 서비스를 WWW가 흡수~~

WWW: 웹 아버지 팀버너스리

백엔드 vs 프론트엔드: 경계가 모호해짐

<웹표준성>
웹 스탠다드: html, css, javascript
html: 마크업을 잘해야 웹접근성이 좋다!! 기본을 탄탄히
css: 스타일링
javascript: 동적인 기능 => 이게 프론트엔드의 꽃
*html탄탄히->js탄탄히. 아무것도 놓치지 말아라
W3C에서 웹표준 만든다
??? whatwg (강의2 21분쯤 다시)

***제프리 젤드만의 웹표준 가이드 책 추천

<웹접근성>
장애에 구애없이 누구나 웹에 접근할 수 있도록!! 우회할 수 있는 방법을 제공하는 것
강제는 아니지만 무조건 생각해봐라 
***apple 접근성 참고 (가이드라인 잘 되어있음)
*성장보다는 사용자 관점에서 구현할 수 있는 개발자!! => 자소서, 면접
접근성은 보편적인거임 => 자소서, 면접
*접근성은 시각장애보다는 시각장애 포함 저시력자들에 집중
*접근성은 불편을 넘어서 불가능한게 아닌지 생각해봐라
*평소에 장애가 아니여도 장애의 불편함을 충분히 느낄 수 있다. 
장애인에게는 외부와 소통할 수 있는 매체가 IT 기술이다. 
환경에 의해 접근하지 못하는 것도 접근성 문제이다!!(ex 윈도우냐 맥이냐..)

깃허브-pdf

----------------------------------------------------------------------------------------------

렌더링 모드-표준과 혹스?헉스?

?dtd를 기준으로 렌더링. 모드가 3개(Strict, Transitional?, Frame)
?예약어, 식별자
?HTML의 전신이 SGML
?strict dtd는 구조적인 태그만 허용
?html(html4. ruleset=문법이 느슨해, 코드의 일관성이 떨어짐) 반면 xml(xhtml 1.0. html의 모호함을 보완.)
?태그로 의미를 이해하게 해주는게 semantic tag임-> 함수이름을 잘만들어야함 
?xml포맷과 json포맷.
?xml 룰셋
?리액트는 xhtml 따르는 걸 권장함
?html5는 xml, html 다 가능. 그치만 convention이 필요함
?thirdparty 기술: flash, silverlight => RIA기술(표준이 아님)
요즘은 단일 스펙이아니라 모듈단위로 기술이 나옴
=>컨텐츠모델 관점에서 html5 공부해야함(렌더링 모델이 아니라...배치관점이 아니라 컨텐츠 관점!!!)
????컨텐츠 관점이 뭘까??

***오늘은 html pdf로 공부하자!!!

이 두가지로 공부하는게 정확하다
-living standards html5
-mdn

lang은 접근성(내가 설정한 국가의 언어로 스크린리더 읽어줌)=>ko로 하다가 영어 내용을 작성하면 en으로 lang해줘야 스크린리더가 적절히 읽을수있다. 
charset
meta가 title보다 먼저 선언되야함
***오늘 코드의 각 의미들


